
// Optionally, set any parameters to send to the plugin.



plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id "com.jetbrains.python.envs" version "0.0.31"
}
// Optionally, set any parameters to send to the plugin.

// -------------------------------------------------------------------------------------------------
// Generate Kotlin code for the Focus Glean metrics.
// -------------------------------------------------------------------------------------------------
apply plugin: "org.mozilla.telemetry.glean-gradle-plugin"

def versionCodeNew = 121
def versionNameNew = "2.7"
def appName = "Xiu"

kapt {
    generateStubs = true
}

android {
    namespace 'org.mozilla.xiu.browser'
    compileSdk 34
    compileSdkVersion 34
    buildFeatures {
        viewBinding = true
        compose true
    }
    defaultConfig {
        minSdk 24
        targetSdk 34
        applicationId "org.mozilla.xiu.browser"
        versionCode versionCodeNew
        versionName versionNameNew

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    dataBinding {
        enabled = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }

    packagingOptions {
        resources {
            pickFirsts += ['META-INF/atomicfu.kotlin_module', 'META-INF/proguard/coroutines.pro']
        }
        jniLibs {
            useLegacyPackaging true
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'arm64-v8a', 'armeabi-v7a'
        }
    }
    androidResources {
        // All JavaScript code used internally by GeckoView is packaged in a
        // file called omni.ja. If this file is compressed in the APK,
        // GeckoView must uncompress it before it can do anything else which
        // causes a significant delay on startup.
        noCompress 'ja'

        // manifest.template.json is converted to manifest.json at build time.
        // No need to package the template in the APK.
        ignoreAssetsPattern "manifest.template.json"
    }
    buildToolsVersion '30.0.3'

    applicationVariants.all { variant ->
        variant.outputs.all {
            def abi = baseName.replace("normal-", "").replace("professional-", "").replace("dev-", "").replace("-release", "").replace("-debug", "")
            def pak = ""
            if (abi == "universal") {
                pak = "-全包"
            } else if (abi == "armeabi-v7a") {
                pak = "-32位"
            } else if (abi == "arm64-v8a") {
                pak = "-64位"
            }
            def fileName = appName + "_V" + versionNameNew + "_C" + versionCodeNew + pak + ".apk"
            outputFileName = fileName
        }
    }
}

// Optionally, set any parameters to send to the plugin.


configurations {
    // There's an interaction between Gradle's resolution of dependencies with different types
    // (@jar, @aar) for `implementation` and `testImplementation` and with Android Studio's built-in
    // JUnit test runner.  The runtime classpath in the built-in JUnit test runner gets the
    // dependency from the `implementation`, which is type @aar, and therefore the JNA dependency
    // doesn't provide the JNI dispatch libraries in the correct Java resource directories.  I think
    // what's happening is that @aar type in `implementation` resolves to the @jar type in
    // `testImplementation`, and that it wins the dependency resolution battle.
    //
    // A workaround is to add a new configuration which depends on the @jar type and to reference
    // the underlying JAR file directly in `testImplementation`.  This JAR file doesn't resolve to
    // the @aar type in `implementation`.  This works when invoked via `gradle`, but also sets the
    // correct runtime classpath when invoked with Android Studio's built-in JUnit test runner.
    // Success!
    jnaForTest
}


dependencies {
    jnaForTest "net.java.dev.jna:jna:5.6.0@jar"
    testImplementation files(configurations.jnaForTest.copyRecursive().files)
    testImplementation "org.mozilla.telemetry:glean-forUnitTests:39.1.0"

    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'com.google.mlkit:barcode-scanning:17.2.0'
    implementation 'androidx.camera:camera-camera2:1.3.0'
    implementation 'androidx.camera:camera-lifecycle:1.3.0'
    implementation 'androidx.camera:camera-view:1.4.0-alpha02'


    def rxhttp_version = '3.2.2'
    def lottieVersion = '6.1.0'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation "com.github.liujingxing.rxhttp:rxhttp:$rxhttp_version"
    kapt "com.github.liujingxing.rxhttp:rxhttp-compiler:$rxhttp_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.7.0-rc01'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'com.google.dagger:hilt-android:2.31.2-alpha'
    annotationProcessor 'com.google.dagger:hilt-android-compiler:2.31.2-alpha'

    implementation 'androidx.activity:activity-compose:1.8.1'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation "androidx.activity:activity-ktx:1.8.1"
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material:material:1.6.0-beta01'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.12.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.5'
    implementation 'androidx.databinding:databinding-runtime:8.1.4'
    testImplementation 'junit:junit:4.13.2'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2'


    def gecko_version = "121.0"
    def mozilla_version = "121.0"
    implementation ("org.mozilla.components:browser-engine-gecko:$mozilla_version")
    implementation ("org.mozilla.components:browser-storage-sync:$mozilla_version")
    implementation ("org.mozilla.components:service-firefox-accounts:$mozilla_version")
    implementation ("org.mozilla.components:service-sync-logins:$mozilla_version")
    implementation ("org.mozilla.components:support-rusthttp:$mozilla_version")
    implementation ("org.mozilla.components:support-rusthttp:$mozilla_version")
    implementation ("org.mozilla.components:support-rustlog:$mozilla_version")
    implementation ("org.mozilla.components:lib-fetch-httpurlconnection:$mozilla_version")
    implementation ("org.mozilla.components:concept-toolbar:$mozilla_version")
    implementation ("org.mozilla.components:concept-storage:$mozilla_version")
    implementation ("org.mozilla.components:feature-accounts-push:$mozilla_version")
    implementation ("org.mozilla.components:lib-crash:$mozilla_version")
    implementation ("org.mozilla.components:lib-crash-sentry:$mozilla_version")
    implementation ("org.mozilla.components:service-contile:$mozilla_version")
    implementation ("org.mozilla.components:service-digitalassetlinks:$mozilla_version")
    implementation ("org.mozilla.components:service-sync-autofill:$mozilla_version")
    implementation ("org.mozilla.components:service-location:$mozilla_version")
    implementation ("org.mozilla.components:service-nimbus:$mozilla_version")
    implementation ("org.mozilla.components:service-pocket:$mozilla_version")
    implementation ("org.mozilla.components:service-glean:$mozilla_version")
    implementation ("org.mozilla.appservices:places:115.0")


    implementation "com.airbnb.android:lottie-compose:$lottieVersion"
    implementation 'com.github.bumptech.glide:glide:4.14.2'
    implementation 'com.github.bumptech.glide:annotations:4.14.2'
    kapt 'com.github.bumptech.glide:compiler:4.14.2'

    def dialogx_version = "0.0.46"
    implementation "com.github.kongzue.DialogX:DialogX:$dialogx_version"
    implementation "com.github.kongzue.DialogX:DialogXMaterialYou:$dialogx_version"
    implementation 'com.iqiyi.xcrash:xcrash-android-lib:3.1.0'
    implementation 'com.squareup.moshi:moshi-kotlin:1.14.0'
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.31.0-alpha"
    implementation "com.github.bumptech.glide:compose:1.0.0-alpha.1"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0-rc01'
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'

    def room_version = "2.6.0"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"
    // To use Kotlin Symbol Processing (KSP)

    // optional - RxJava2 support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - RxJava3 support for Room
    implementation "androidx.room:room-rxjava3:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    // optional - Paging 3 Integration
    implementation "androidx.room:room-paging:$room_version"



    implementation 'com.airbnb.android:lottie:6.1.0'
    implementation "org.greenrobot:eventbus:3.0.0"
    //弹窗组件
    implementation 'com.github.li-xiaojun:XPopup:2.8.0'
    implementation 'com.alibaba:fastjson:1.1.70.android'
    //stream用法
    implementation 'com.annimon:stream:1.2.1'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    //白色沉浸式状态栏
    implementation 'com.githang:status-bar-compat:0.7'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.9'
    implementation project(':VideoPlayModule')
    implementation project(':ffmpeg')
    //投屏
    implementation(project(':clinglibrary')) {
        exclude module: 'javax.inject'
        exclude group: 'javax.inject'
        exclude group: 'com.android.support'
    }
    //svg图片
    implementation 'com.caverock:androidsvg-aar:1.3'
    //brotli
    api 'com.squareup.okhttp3:okhttp-brotli:4.10.0'
    api("org.brotli:dec:0.1.2")
    // 权限请求框架：https://github.com/getActivity/XXPermissions
    implementation 'com.github.getActivity:XXPermissions:18.5'

    implementation "com.github.luqiming666:SwipeRecyclerView:1.4.8"

    implementation 'org.jsoup:jsoup:1.14.3'
    implementation("jp.wasabeef:glide-transformations:4.3.0") { exclude group: 'com.github.bumptech.glide' }
    // If you want to use the GPU Filters
    implementation 'jp.co.cyberagent.android:gpuimage:2.1.0'
}

